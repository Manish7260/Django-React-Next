{"version":3,"file":"static/js/236.82a14602.chunk.js","mappings":"mKA+HA,UApHsB,SAAHA,GAAsB,IAAhBC,EAAQD,EAARC,SACxBC,GAAqCC,EAAAA,EAAAA,MAA7BC,EAAOF,EAAPE,QAASC,EAAOH,EAAPG,QACjBC,GADgCJ,EAANK,QAStBC,EAAAA,EAAAA,IAAYC,EAAAA,KAPfC,EAAGJ,EAAHI,IACAC,EAAcL,EAAdK,eAQKC,GAPcN,EAAnBO,oBACmBP,EAAnBQ,oBACWR,EAAXS,YACaT,EAAbU,cACWV,EAAXW,aAGgBC,EAAAA,EAAAA,OAqGjB,OAhFAC,EAAAA,EAAAA,YAAU,WACJf,GACLQ,GAASQ,EAAAA,EAAAA,IAAiBhB,GAC3B,GAAG,CAACA,EAASQ,KAEbO,EAAAA,EAAAA,YAAU,WACJd,GACLO,GAASS,EAAAA,EAAAA,IAAiBhB,GAC3B,GAAG,CAACA,EAASO,KAEbO,EAAAA,EAAAA,YAAU,WACTP,GAASU,EAAAA,EAAAA,MAGV,GAAG,CAACX,EAAgBC,KAEpBO,EAAAA,EAAAA,YAAU,WACTP,GAASU,EAAAA,EAAAA,MACV,GAAG,CAACX,EAAgBC,KAEpBO,EAAAA,EAAAA,YAAU,WACD,OAAHT,QAAG,IAAHA,GAAAA,EAAKa,aACVC,QAAQC,IAAI,qBACZb,GAASc,EAAAA,EAAAA,OACV,GAAG,CAAI,OAAHhB,QAAG,IAAHA,OAAG,EAAHA,EAAKa,WAAYZ,EAAgBC,IAwD9BX,CACR,C","sources":["components/Initalization/Initalization.jsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport {\n\tidoFactoryContractAction,\n\tidoPresaleContractAction,\n\tidoState,\n\tsetAccountAction,\n\tsetChainIdAction,\n} from \"redux/reducers/idoSlice\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useEffect } from \"react\";\n\nconst Initalization = ({ children }) => {\n\tconst { account, chainId, active } = useWeb3React();\n\tconst {\n\t\tido,\n\t\tcurrentChainId,\n\t\t_idoFactoryContract,\n\t\t_idoPresaleContract,\n\t\tuserAccount,\n\t\tcreateIdoData,\n\t\ttransaction,\n\t} = useSelector(idoState);\n\n\tconst dispatch = useDispatch();\n\t// const navigate = useNavigate();\n\t//state\n\t// const [idoCreateListinar, setIdoCreateListionar] = useState(null);\n\t// const [idoUpdateListinar, setIdoUpdateListionar] = useState(null);\n\n\t// const createIdoinDb = (event) => {\n\t// \t// if (userAccount !== event?.returnValues?.user) return;\n\t// \tconsole.log(\"event fire\", event?.returnValues?.idoaddress);\n\t// \tconst payload = {\n\t// \t\t...createIdoData,\n\t// \t\tidoAddress: event?.returnValues?.idoaddress,\n\t// \t};\n\t// \tdispatch(createIdoDbAction(payload));\n\t// };\n\n\t// const updateIdoinDb = useCallback(() => {\n\t// \tconsole.log(\"update fire\");\n\t// \tdispatch(updateIdoDbAction());\n\t// }, [dispatch]);\n\n\tuseEffect(() => {\n\t\tif (!account) return;\n\t\tdispatch(setAccountAction(account));\n\t}, [account, dispatch]);\n\n\tuseEffect(() => {\n\t\tif (!chainId) return;\n\t\tdispatch(setChainIdAction(chainId));\n\t}, [chainId, dispatch]);\n\n\tuseEffect(() => {\n\t\tdispatch(idoFactoryContractAction());\n\t\t// navigate(\"/\");\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [currentChainId, dispatch]);\n\n\tuseEffect(() => {\n\t\tdispatch(idoFactoryContractAction());\n\t}, [currentChainId, dispatch]);\n\n\tuseEffect(() => {\n\t\tif (!ido?.idoAddress) return;\n\t\tconsole.log(\"initalize presale\");\n\t\tdispatch(idoPresaleContractAction());\n\t}, [ido?.idoAddress, currentChainId, dispatch]);\n\n\t// useEffect(() => {\n\t// \tif (!_idoFactoryContract) return;\n\t// \t// const createdListionar = _idoFactoryContract.events.IdoCreated();\n\t// \tconsole.log(\"_idoFactoryContract\", _idoFactoryContract);\n\t// \t// setIdoCreateListionar(createdListionar);\n\t// }, [_idoFactoryContract]);\n\n\t//idopresale\n\t// useEffect(() => {\n\t// \tif (!_idoPresaleContract) return;\n\t// \tconst createdListionar = _idoPresaleContract.events.IdoUpdated();\n\t// \t// const tokenDepositedLisner =\n\t// \t_idoPresaleContract.events.TokenDeposited({}, (error, event) => {\n\t// \t\tconsole.log(\"errordiff\", error);\n\t// \t\tconsole.log(\"eventdiff\", event);\n\t// \t});\n\n\t// \tsetIdoUpdateListionar(createdListionar);\n\t// \t// setTokenDepositedLisner(tokenDepositedLisner);\n\t// }, [_idoPresaleContract]);\n\n\t//buy\n\t// useEffect(() => {\n\t// \tif (!tokenDepositedListner) return;\n\t// \ttokenDepositedListner.on(\"data\", cb);\n\n\t// \treturn () => {\n\t// \t\ttokenDepositedListner?.off(\"data\", cb);\n\t// \t};\n\t// }, [tokenDepositedListner]);\n\n\t//update\n\t// useEffect(() => {\n\t// \tif (!idoUpdateListinar) return;\n\t// \tidoUpdateListinar.on(\"data\", updateIdoinDb);\n\n\t// \treturn () => {\n\t// \t\tconsole.log(\"call cleanup\");\n\t// \t\tidoUpdateListinar?.off(\"data\", updateIdoinDb);\n\t// \t};\n\t// }, [idoUpdateListinar, updateIdoinDb]);\n\n\t//shoude be remove\n\t//ceate\n\n\t// useEffect(() => {\n\t// \tif (!idoCreateListinar) return;\n\t// \tidoCreateListinar.on(\"data\", createIdoinDb);\n\n\t// \treturn () => {\n\t// \t\tidoCreateListinar?.off(\"data\", createIdoinDb);\n\t// \t};\n\t// }, [idoCreateListinar, createIdoinDb]);\n\n\treturn children;\n};\n\nexport default Initalization;\n"],"names":["_ref","children","_useWeb3React","useWeb3React","account","chainId","_useSelector","active","useSelector","idoState","ido","currentChainId","dispatch","_idoFactoryContract","_idoPresaleContract","userAccount","createIdoData","transaction","useDispatch","useEffect","setAccountAction","setChainIdAction","idoFactoryContractAction","idoAddress","console","log","idoPresaleContractAction"],"sourceRoot":""}